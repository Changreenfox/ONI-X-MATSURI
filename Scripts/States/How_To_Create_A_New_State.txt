3 Functions:

public Constructor(Actor _host)
{
	host = _host;
}

public override void Enter()
{
	base.Enter() //Unless base is just State
	PlayAnimation()
	//Set any necessary variables here
}

public override string HandlePhysics(float)
{
	string temp = base.HandlePhysics() //Unless base is just State

	// If you need the character to move, handle it here

	// Can be used to check for state switches, in which case return the name of the next state as a string
	/* Example:
	//	if(Input.Equals("Jump"))
	//		return "Jump"      */

	return temp; //Unless base is just State, then return null;
}

public override string StateName()
{
	//just return the name of the State in the state machine and animator
	//For example where new BossMotion = "Motion" in the FSM
	//	return "Motion"
}

public override void PlayAnimation()
{
	//Make any calls to playing animation in here. Should be handled in the state that calls it
	host.PlayAnimation(StateName());
}

/*========================================================Helpful Functions====================================*/

public override void Exit()
{
	//Not even used once yet
	//Could be used for clean-up if needed
}

public override string HandleProcess(float)
{
	//For when you don't need to touch physics, but want to call something
	//Can also change state from within here just like above
}

public override void HandleTimer()
{
	//Called whenever a timer in the host goes off
	//Can be used to change a bool that changes states, etc.
}
