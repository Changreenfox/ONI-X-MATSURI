# Workflow : build.yml
# Details  :
#   Exports the project as a Godot project.
# See   : 
#   https://github.com/marketplace/actions/godot-ci *
#   https://github.com/marketplace/actions/godot-export
#   https://github.com/abarichello/godot-ci/issues/87
#   For getting icon: https://github.com/pkowal1982/godoticon
on: 
  push:
    # uncomment to push only on version releases
    # tags:
    #   - "v*"

env:
  GODOT_VERSION: 3.4.5
  EXPORT_NAME: oni-x-matsuri

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run .NET Code Analysis
        uses: dotnet/code-analysis@main
        id: code-analysis
        with:
          solution: ONI-x-MATSURI.sln
          project: ONI-x-MATSURI.csproj
          build-breaking: true
          all-categories: all

      - name: Upload SARIF report
        uses: actions/upload-artifact@v3
        with:
          name: analysis-report
          path: .gdn/analysis_results.sarif
          if-no-files-found: error

  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.4.5 # use 'mono' for C#
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
        
      - name: Setup Godot mono
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
        
      - name: Build for windows platform
        run: |
          mkdir -v -p build/windows
          godot -v --export "windows" ./build/windows/$EXPORT_NAME.exe

      - name: Upload artifact
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v3
        with:
          name: oni-x-matsuri-windows-x86-64
          path: build/windows
          if-no-files-found: error
          retention-days: 2

  export-macos:
    name: macOS Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.4.5 # use 'mono' for C#
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Godot mono
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
        
      - name: Build for macOS platform
        run: |
          mkdir -v -p build/macos
          godot -v --export "macos" ./build/macos/$EXPORT_NAME.zip

      - name: Upload artifact
        if: github.ref_type == 'tag'
        uses: actions/upload-artifact@v3
        with:
          name: oni-x-matsuri-macos-x86-64
          path: build/macos
          if-no-files-found: error
          retention-days: 2

  release:
    needs: [export-windows, export-macos]
    name: Release
    if: github.ref_type == 'tag'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Display filesystem contents
        run: ls -R

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Package contents
        run: |
          python ./tools/pack.py windows-x86-64
          python ./tools/pack.py macos-x86-64

      - name: Verify release notes
        run: python ./tools/GenReleaseNotes.py ${{ github.ref_name }}

      - name: Write release notes
        run: echo "$(python ./tools/GenReleaseNotes.py ${{ github.ref_name }})" > ./RELEASE_NOTES.md

      - name: Upload releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: '**/oni-x-matsuri-*.zip'
          bodyFile: ./RELEASE_NOTES.md
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}